#sql to pull a record from meta_source file and assign it to the pid
# this will lock the table to ensure each pid gets assign 1 row of work
sql_get_work:
  UPDATE {0}.meta_source_files
    SET
    current_worker_host='{1}',
    current_worker_host_pid={2},
    process_start_dtm=now(),
    last_error_msg=NULL
    WHERE id in
    (select id
      FROM {0}.meta_source_files
      WHERE  file_process_state='RAW' and current_worker_host is null
      and reprocess=True
      and project_name in ({3})
      ORDER BY
      file_name_data asc,
      parent_file_id asc,
      file_path asc,
      file_name asc
      limit 1
    )
#Sql to extrac data out of the file name
sql_update_file_data_date: 
  UPDATE logging.meta_source_files 
  set file_name_data= substring(file_name,'{extract_regex}')  
  where parent_file_id=0 
  and substring(file_name,'{extract_regex}')= substring(file_name,'{extract_regex}')
  and project_name='{project_name}'
sql_update_file_data_date_children:
  UPDATE logging.meta_source_files a
  set a.file_name_data= substring(parent.file_name,'{extract_regex}')  
  from logging.meta_source_files parent 
  where a.parent_file_id=parent.id and a.parent_file_id>0 and (a.file_name_data is null or a.file_name_data='0' or file_name_data='') and a.project_name='{project_name}'"""

sql_update_file_data_date_regex: 
  update logging.meta_source_files set file_name_data=date(to_date(substring(file_name,'{extract_regex}') ,'{date_format_pattern}'))
  where parent_file_id=0 
  and project_name='{project_name}'
  and to_date(substring(file_name,'{extract_regex}') ,'{date_format_pattern}') = to_date(substring(file_name,'{extract_regex}') ,'{date_format_pattern}')
sql_update_file_data_date_children_regex: 
  update logging.meta_source_files a
  set file_name_data=date(to_date(substring(parent.file_name,'{extract_regex}') ,'{date_format_pattern}'))
  from logging.meta_source_files parent 
  where a.parent_file_id=parent.id and a.parent_file_id>0 and (a.file_name_data is null or a.file_name_data='0' or a.file_name_data='') 
  and a.project_name='{project_name}'
#sql to reset all meta data rows
sql_update_ALL_meta_source:
  UPDATE logging.meta_source_files
  SET process_start_dtm=null
  ,process_end_dtm=null
  ,current_worker_host=null
  ,current_worker_host_pid=null
  ,file_process_state='RAW'
  ,reporcess = True
  ,total_rows=0
  ,duplicate_file=False
  WHERE  1=1
  AND {}
sql_update_FAILED_meta_source:               
  UPDATE logging.meta_source_files
    set process_start_dtm=null
    ,process_end_dtm=null
    ,current_worker_host=null
    ,current_worker_host_pid=null
    ,last_error_msg=null
    ,file_process_state='RAW'
    ,duplicate_file=False
    WHERE  upper(file_process_state)='FAILED'
    AND reprocess = True
    AND {}
sql_update_RAW_meta_source:
    UPDATE logging.meta_source_files
      SET process_start_dtm=null
      ,process_end_dtm=null
      ,current_worker_host=null
      ,current_worker_host_pid=null
      ,last_error_msg=null
      ,file_process_state='RAW'
      ,duplicate_file=False
      WHERE  upper(file_process_state)='RAW'
      AND file_type in ('CSV','DATA')
      AND {}
sql_update_DATA_meta_source:
  UPDATE logging.meta_source_files
    SET process_start_dtm=null
    ,process_end_dtm=null
    ,current_worker_host=null
    ,current_worker_host_pid=null
    ,last_error_msg=null
    ,file_process_state='RAW'
    ,duplicate_file=False
    WHERE   file_type in ('CSV','DATA')
    AND {}

sql_any_proc_still_unzipping:
  select count(*) from logging.meta_source_files 
  where file_process_state='PROCESSING'
  AND file_type in ('ZIP','GZ','TAR','RAR')
  AND process_start_dtm IS NOT NULL 
  AND process_end_dtm IS NULL
  