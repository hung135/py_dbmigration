version: '3'

services:
  app:
    build: 
      context: ..
      dockerfile: .devcontainer/Dockerfile

    volumes:
      - ..:/workspace
      # This lets you avoid setting up Git again in the container
      - ~/.gitconfig:/root/.gitconfig
      - /var/run/docker.sock:/var/run/docker.sock
      - /Volumes/dtwork/applications/static/runtime-exe/:/runtime-exe/
      - ./.bashrc:/root/.bashrc 
    # Overrides default command so things don't shut down after the process ends - useful for debugging
    command: sleep infinity
 
      
    environment:
      PGHOST: pgdb
      PGDATABASE: postgres
      PGUSER: docker
      PGPASSWORD: docker
      PYTHONPATH: /workspace/src
      PGPORT: 5432
      MYSQL_DATABASE: test
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      MYSQL_HOST: mysqldb
      MYSQL_PORT: 3306    
      MS_PASSWORD: Docker1234
      MS_PORT: 1433
      MS_HOST: mssqldb
      MS_USER: sa
      MS_DATABASE: master
  pgdb:
    image: postgres
    restart: always
    volumes:
      - ../init.sql:/docker-entrypoint-initdb.d/init.sql
    
    # ports: 
    #   - 5432:5432
    environment:
      POSTGRES_PASSWORD: docker
      POSTGRES_USER: docker
  # mysqldb:
  #   image: mariadb
  #   restart: always
  #   # ports: 
  #   #   - 3306:3306

  #   environment:
  #       MYSQL_ROOT_PASSWORD: root
  #       MYSQL_DATABASE: test
  #       MYSQL_USER: docker
  #       MYSQL_PASSWORD: docker
  #       MYSQL_HOST: mysqldb
  #       MYSQL_PORT: 3306
  # mssqldb:
  #   image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
  #   restart: always
  #   # ports: 
  #   #   - 1433:1433
  #   environment:
  #       ACCEPT_EULA: 'Y'
  #       SA_PASSWORD: Docker1234
  #       MSSQL_PID: Express
        
  pgadmin4:
    image: dpage/pgadmin4
    restart: always
    ports: 
      - 801:80
    links:
      - pgdb
    volumes:
      # - ~/.pgadmincompose:/var/lib/pgadmin
      - ./pgadmin4.json:/pgadmin4/servers.json
    environment:
      PGADMIN_LISTEN_PORT: 80  
      PGADMIN_DEFAULT_EMAIL: docker
      PGADMIN_DEFAULT_PASSWORD: docker
      PGADMIN_CONFIG_LOGIN_BANNER: "'PGADMIN4 LOGIN: docker : docker'"
    command:
        - /usr/local/bin/python /pgadmin4/setup.py --load-servers /pgadmin4/servers.json --user docker
  
  # sonarqube:
  #   image: bitnami/sonarqube:latest
  #   depends_on:
  #     - pgdb
  #   ports:
  #     - '9000:9000'
  #   environment:
  #     - SONARQUBE_DATABASE_USER=docker
  #     - SONARQUBE_DATABASE_NAME=bitnami_sonarqube
  #     - SONARQUBE_DATABASE_PASSWORD=docker
  #     - POSTGRESQL_HOST=pgdb
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     - POSTGRESQL_ROOT_USER=docker
  #     - POSTGRESQL_ROOT_PASSWORD=docker
  #     - POSTGRESQL_CLIENT_CREATE_DATABASE_NAME=bitnami_sonarqube
  #     - POSTGRESQL_CLIENT_CREATE_DATABASE_USERNAME=docker
  #     - POSTGRESQL_CLIENT_CREATE_DATABASE_PASSWORD=docker
  #   volumes:
  #     - ~/.sonar/sonarqube-persistence:/bitnami